name: Docker CI
permissions:
  contents: write
  issues: write
  pages: write
  id-token: write
on:
  push:
    branches:
      - dev
    tags:
      - 'v*.*.*'
  workflow_run:
    workflows: ['Release']
    types:
      - completed

jobs:
  build-and-push-frontend:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/dev' && 'development' || 'production' }}
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          logout: true

      - name: Set Image Tag
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            VERSION_TAG="${GITHUB_REF#refs/tags/}"
            echo "TAG_SUFFIX=$VERSION_TAG" >> $GITHUB_ENV
          elif [[ "${{ github.event_name }}" == "workflow_run" ]]; then
            git fetch --tags
            LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
            echo "TAG_SUFFIX=$LATEST_TAG" >> $GITHUB_ENV
          else
            SHORT_SHA=$(git rev-parse --short HEAD)
            echo "TAG_SUFFIX=dev-${SHORT_SHA}" >> $GITHUB_ENV
          fi

      - name: Build & Push Frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fellowship-frontend:${{ env.TAG_SUFFIX }}

      - name: Save and compress frontend Docker image
        run: |
          # Remove any existing tar file
          rm -f frontend.tar.gz || true
          docker save ${{ secrets.DOCKERHUB_USERNAME }}/fellowship-frontend:${{ env.TAG_SUFFIX }} | gzip > frontend.tar.gz
        continue-on-error: true

      - name: Upload frontend image tar
        uses: actions/upload-artifact@v4
        if: success() && hashFiles('frontend.tar.gz') != ''
        with:
          name: frontend-image-${{ github.run_id }}-${{ github.run_attempt }}
          path: frontend.tar.gz
          retention-days: 7


      - name: Set up Trivy
        if: >
          github.ref == 'refs/heads/main' ||
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'
        uses: aquasecurity/setup-trivy@v0.2.0
        with:
          version: v0.64.1

      - name: Download Trivy HTML template
        if: >
          github.ref == 'refs/heads/main' ||
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'
        run: curl -o html.tpl https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl

      - name: Run Trivy HTML scan for frontend
        if: >
          github.ref == 'refs/heads/main' ||
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'
        run: |
          trivy image --format template --template @html.tpl \
            -o frontend-trivy.html \
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/fellowship-frontend:${{ env.TAG_SUFFIX }}

      - name: Upload Trivy report (frontend)
        if: >
          success() && (github.ref == 'refs/heads/main' || (github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'))
        uses: actions/upload-artifact@v4
        with:
          name: frontend-trivy-report
          path: frontend-trivy.html




  build-and-push-backend:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/dev' && 'development' || 'production' }}
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set Image Tag
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            VERSION_TAG="${GITHUB_REF#refs/tags/}"
            echo "TAG_SUFFIX=$VERSION_TAG" >> $GITHUB_ENV
          elif [[ "${{ github.event_name }}" == "workflow_run" ]]; then
            git fetch --tags
            LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
            echo "TAG_SUFFIX=$LATEST_TAG" >> $GITHUB_ENV
          else
            SHORT_SHA=$(git rev-parse --short HEAD)
            echo "TAG_SUFFIX=dev-${SHORT_SHA}" >> $GITHUB_ENV
          fi

      - name: Build & Push Backend1
        uses: docker/build-push-action@v6
        with:
          context: ./backend1
          file: ./backend1/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fellowship-backend1:${{ env.TAG_SUFFIX }}

      - name: Save and compress backend1 Docker image
        run: |
          # Remove any existing tar file
          rm -f backend1.tar.gz || true
          docker save ${{ secrets.DOCKERHUB_USERNAME }}/fellowship-backend1:${{ env.TAG_SUFFIX }} | gzip > backend1.tar.gz
        continue-on-error: true

      - name: Upload backend1 image tar
        uses: actions/upload-artifact@v4
        if: success() && hashFiles('backend1.tar.gz') != ''
        with:
          name: backend1-image-${{ github.run_id }}-${{ github.run_attempt }}
          path: backend1.tar.gz
          retention-days: 7

      - name: Set up Trivy
        if: >
          github.ref == 'refs/heads/main' ||
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'
        uses: aquasecurity/setup-trivy@v0.2.0
        with:
          version: v0.64.1

      - name: Download Trivy HTML template
        if: >
          github.ref == 'refs/heads/main' ||
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'
        run: curl -o html.tpl https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl

      - name: Run Trivy HTML scan for backend1
        if: >
          github.ref == 'refs/heads/main' ||
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'
        run: |
          trivy image --format template --template @html.tpl \
            -o backend1-trivy.html \
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/fellowship-backend1:${{ env.TAG_SUFFIX }}

      - name: Upload Trivy report (backend1)
        if: >
          success() && (github.ref == 'refs/heads/main' || (github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'))
        uses: actions/upload-artifact@v4
        with:
          name: backend1-trivy-report
          path: backend1-trivy.html




      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Backend2
        uses: docker/build-push-action@v6
        with:
          context: ./backend2
          file: ./backend2/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fellowship-backend2:${{ env.TAG_SUFFIX }}

      - name: Save and compress backend2 Docker image
        run: |
          # Remove any existing tar file
          rm -f backend2.tar.gz || true
          docker save ${{ secrets.DOCKERHUB_USERNAME }}/fellowship-backend2:${{ env.TAG_SUFFIX }} | gzip > backend2.tar.gz
        continue-on-error: true

      - name: Upload backend2 image tar
        uses: actions/upload-artifact@v4
        if: success() && hashFiles('backend2.tar.gz') != ''
        with:
          name: backend2-image-${{ github.run_id }}-${{ github.run_attempt }}
          path: backend2.tar.gz
          retention-days: 7


      - name: Set up Trivy
        if: >
          github.ref == 'refs/heads/main' ||
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'
        uses: aquasecurity/setup-trivy@v0.2.0
        with:
          version: v0.64.1

      - name: Download Trivy HTML template
        if: >
          github.ref == 'refs/heads/main' ||
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'
        run: curl -o html.tpl https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl

      - name: Run Trivy HTML scan for backend2
        if: >
          github.ref == 'refs/heads/main' ||
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'
        run: |
          trivy image --format template --template @html.tpl \
            -o backend2-trivy.html \
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/fellowship-backend2:${{ env.TAG_SUFFIX }}

      - name: Upload Trivy report (backend2)
        if: >
          success() && (github.ref == 'refs/heads/main' || (github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'))
        uses: actions/upload-artifact@v4
        with:
          name: backend2-trivy-report
          path: backend2-trivy.html



  publish-report:
    if: >
      github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'

    runs-on: ubuntu-latest
    needs:
      - build-and-push-frontend
      - build-and-push-backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download frontend image
        uses: actions/download-artifact@v4
        with:
          name: frontend-image-${{ github.run_id }}-${{ github.run_attempt }}
          path: images

      - name: Download backend1 image
        uses: actions/download-artifact@v4
        with:
          name: backend1-image-${{ github.run_id }}-${{ github.run_attempt }}
          path: images

      - name: Download backend2 image
        uses: actions/download-artifact@v4
        with:
          name: backend2-image-${{ github.run_id }}-${{ github.run_attempt }}
          path: images

      - name: Download Trivy report (frontend)
        uses: actions/download-artifact@v4
        with:
          name: frontend-trivy-report
          path: .

      - name: Download Trivy report (backend1)
        uses: actions/download-artifact@v4
        with:
          name: backend1-trivy-report
          path: .

      - name: Download Trivy report (backend2)
        uses: actions/download-artifact@v4
        with:
          name: backend2-trivy-report
          path: .


      - name: Get Trivy Reports
        run: |
          mkdir -p reports
          mv frontend-trivy.html reports/ || true
          mv backend1-trivy.html reports/ || true
          mv backend2-trivy.html reports/ || true


      - name: Generate index.html
        run: |
          cd reports
          cat <<EOF > index.html
          <html>
            <head><title>Security Reports</title></head>
            <body>
              <h1>Fellowship App - Reports Dashboard</h1>
              <ul>
                <li><a href="https://sk00l.github.io/git-day15/">Deployed Frontend</a></li>
                <li><a href="frontend-trivy.html">Frontend Trivy Report</a></li>
                <li><a href="backend1-trivy.html">Backend1 Trivy Report</a></li>
                <li><a href="backend2-trivy.html">Backend2 Trivy Report</a></li>
              </ul>
            </body>
          </html>
          EOF

      - name: Push reports to report branch
        run: |
          cd reports
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git init
          git checkout --orphan report
          git add .
          git commit -m "Update security reports"
          git remote add origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git push --force origin report

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
