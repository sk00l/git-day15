name: Docker CI
permissions:
  contents: write
  issues: write
on:
  push:
    branches:
      - dev
    tags:
      - 'v*.*.*'
  workflow_run:
    workflows: ['Release']
    types:
      - completed

jobs:
  build-and-push-frontend:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/dev' && 'development' || 'production' }}
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Install frontend dependencies
        working-directory: frontend
        run: yarn install --frozen-lockfile

      - name: Build frontend static site
        working-directory: frontend
        run: yarn build

      - name: Upload frontend static files
        uses: actions/upload-artifact@v4
        with:
          name: frontend-static-dist
          path: frontend/dist


      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          logout: true

      - name: Set Image Tag
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            VERSION_TAG="${GITHUB_REF#refs/tags/}"
            echo "TAG_SUFFIX=$VERSION_TAG" >> $GITHUB_ENV
          elif [[ "${{ github.event_name }}" == "workflow_run" ]]; then
            git fetch --tags
            LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
            echo "TAG_SUFFIX=$LATEST_TAG" >> $GITHUB_ENV
          else
            SHORT_SHA=$(git rev-parse --short HEAD)
            echo "TAG_SUFFIX=dev-${SHORT_SHA}" >> $GITHUB_ENV
          fi

      - name: Build & Push Frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fellowship-frontend:${{ env.TAG_SUFFIX }}

      - name: Save and compress frontend Docker image
        run: |
          # Remove any existing tar file
          rm -f frontend.tar.gz || true
          docker save ${{ secrets.DOCKERHUB_USERNAME }}/fellowship-frontend:${{ env.TAG_SUFFIX }} | gzip > frontend.tar.gz
        continue-on-error: true

      - name: Upload frontend image tar
        uses: actions/upload-artifact@v4
        if: success() && hashFiles('frontend.tar.gz') != ''
        with:
          name: frontend-image-${{ github.run_id }}-${{ github.run_attempt }}
          path: frontend.tar.gz
          retention-days: 7


      - name: Set up Trivy
        if: >
          github.ref == 'refs/heads/main' ||
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'
        uses: aquasecurity/setup-trivy@v0.2.0
        with:
          version: v0.64.1

      - name: Download Trivy HTML template
        if: >
          github.ref == 'refs/heads/main' ||
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'
        run: curl -o html.tpl https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl

      - name: Run Trivy HTML scan for frontend
        if: >
          github.ref == 'refs/heads/main' ||
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'
        run: |
          trivy image --format template --template @html.tpl \
            -o frontend-trivy.html \
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/fellowship-frontend:${{ env.TAG_SUFFIX }}

      - name: Upload Trivy report (frontend)
        if: >
          success() && (github.ref == 'refs/heads/main' || (github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'))
        uses: actions/upload-artifact@v4
        with:
          name: frontend-trivy-report
          path: frontend-trivy.html




  build-and-push-backend:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/dev' && 'development' || 'production' }}
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set Image Tag
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            VERSION_TAG="${GITHUB_REF#refs/tags/}"
            echo "TAG_SUFFIX=$VERSION_TAG" >> $GITHUB_ENV
          elif [[ "${{ github.event_name }}" == "workflow_run" ]]; then
            git fetch --tags
            LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
            echo "TAG_SUFFIX=$LATEST_TAG" >> $GITHUB_ENV
          else
            SHORT_SHA=$(git rev-parse --short HEAD)
            echo "TAG_SUFFIX=dev-${SHORT_SHA}" >> $GITHUB_ENV
          fi

      - name: Build & Push Backend1
        uses: docker/build-push-action@v6
        with:
          context: ./backend1
          file: ./backend1/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fellowship-backend1:${{ env.TAG_SUFFIX }}

      - name: Save and compress backend1 Docker image
        run: |
          # Remove any existing tar file
          rm -f backend1.tar.gz || true
          docker save ${{ secrets.DOCKERHUB_USERNAME }}/fellowship-backend1:${{ env.TAG_SUFFIX }} | gzip > backend1.tar.gz
        continue-on-error: true

      - name: Upload backend1 image tar
        uses: actions/upload-artifact@v4
        if: success() && hashFiles('backend1.tar.gz') != ''
        with:
          name: backend1-image-${{ github.run_id }}-${{ github.run_attempt }}
          path: backend1.tar.gz
          retention-days: 7

      - name: Set up Trivy
        if: >
          github.ref == 'refs/heads/main' ||
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'
        uses: aquasecurity/setup-trivy@v0.2.0
        with:
          version: v0.64.1

      - name: Download Trivy HTML template
        if: >
          github.ref == 'refs/heads/main' ||
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'
        run: curl -o html.tpl https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl

      - name: Run Trivy HTML scan for backend1
        if: >
          github.ref == 'refs/heads/main' ||
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'
        run: |
          trivy image --format template --template @html.tpl \
            -o backend1-trivy.html \
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/fellowship-backend1:${{ env.TAG_SUFFIX }}

      - name: Upload Trivy report (backend1)
        if: >
          success() && (github.ref == 'refs/heads/main' || (github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'))
        uses: actions/upload-artifact@v4
        with:
          name: backend1-trivy-report
          path: backend1-trivy.html




      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Backend2
        uses: docker/build-push-action@v6
        with:
          context: ./backend2
          file: ./backend2/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fellowship-backend2:${{ env.TAG_SUFFIX }}

      - name: Save and compress backend2 Docker image
        run: |
          # Remove any existing tar file
          rm -f backend2.tar.gz || true
          docker save ${{ secrets.DOCKERHUB_USERNAME }}/fellowship-backend2:${{ env.TAG_SUFFIX }} | gzip > backend2.tar.gz
        continue-on-error: true

      - name: Upload backend2 image tar
        uses: actions/upload-artifact@v4
        if: success() && hashFiles('backend2.tar.gz') != ''
        with:
          name: backend2-image-${{ github.run_id }}-${{ github.run_attempt }}
          path: backend2.tar.gz
          retention-days: 7


      - name: Set up Trivy
        if: >
          github.ref == 'refs/heads/main' ||
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'
        uses: aquasecurity/setup-trivy@v0.2.0
        with:
          version: v0.64.1

      - name: Download Trivy HTML template
        if: >
          github.ref == 'refs/heads/main' ||
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'
        run: curl -o html.tpl https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl

      - name: Run Trivy HTML scan for backend2
        if: >
          github.ref == 'refs/heads/main' ||
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'
        run: |
          trivy image --format template --template @html.tpl \
            -o backend2-trivy.html \
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/fellowship-backend2:${{ env.TAG_SUFFIX }}

      - name: Upload Trivy report (backend2)
        if: >
          success() && (github.ref == 'refs/heads/main' || (github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'))
        uses: actions/upload-artifact@v4
        with:
          name: backend2-trivy-report
          path: backend2-trivy.html



  publish-report:
    if: >
      github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'

    runs-on: ubuntu-latest
    needs:
      - build-and-push-frontend
      - build-and-push-backend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4


      - name: Download frontend static site
        uses: actions/download-artifact@v4
        with:
          name: frontend-static-dist
          path: reports/frontend


      - name: Download Trivy report (frontend)
        uses: actions/download-artifact@v4
        with:
          name: frontend-trivy-report
          path: reports

      - name: Download Trivy report (backend1)
        uses: actions/download-artifact@v4
        with:
          name: backend1-trivy-report
          path: reports

      - name: Download Trivy report (backend2)
        uses: actions/download-artifact@v4
        with:
          name: backend2-trivy-report
          path: reports


      - name: Generate index.html
        run: |
          cat <<EOF > reports/index.html
          <html>
            <head><title>Security Reports</title></head>
            <body>
              <h1>Fellowship App - Reports Dashboard</h1>
              <ul>
                <li><a href="frontend/index.html">Deployed Frontend</a></li>
                <li><a href="frontend-trivy.html">Frontend Trivy Report</a></li>
                <li><a href="backend1-trivy.html">Backend1 Trivy Report</a></li>
                <li><a href="backend2-trivy.html">Backend2 Trivy Report</a></li>
              </ul>
            </body>
          </html>
          EOF

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Backup reports before switching branch
        run: |
          mkdir -p /tmp/reports-copy
          cp -r reports/* /tmp/reports-copy/

      - name: Switch to report branch
        run: |
          git fetch origin report:report || git checkout --orphan report
          git checkout report
          rm -rf *

      - name: Restore reports to root
        run: |
          cp -r /tmp/reports-copy/* .
          touch .nojekyll


      - name: Commit and Push report
        run: |
          git add .
          git commit -m "Update reports from CI run $GITHUB_RUN_ID" || echo "No changes to commit"
          git push origin report

      - name: Deploy to VM
        run: |
          echo "Deploying with tag: ${{ env.TAG_SUFFIX }}"
          ssh -tt ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} "TAG_SUFFIX='${{ env.TAG_SUFFIX }}' bash -s" <<'EOF'
            echo "Connected to VM..."
            echo "Using tag: $TAG_SUFFIX"

            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/fellowship-frontend:$TAG_SUFFIX
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/fellowship-backend1:$TAG_SUFFIX
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/fellowship-backend2:$TAG_SUFFIX

            echo "Stopping old containers..."
            sudo docker stop frontend backend1 backend2 || true
            sudo docker rm frontend backend1 backend2 || true

            echo "Running new containers..."
            sudo docker run -d --name frontend -p 80:80 ${{ secrets.DOCKERHUB_USERNAME }}/fellowship-frontend:$TAG_SUFFIX
            sudo docker run -d --name backend1 -p 3001:3000 ${{ secrets.DOCKERHUB_USERNAME }}/fellowship-backend1:$TAG_SUFFIX
            sudo docker run -d --name backend2 -p 3002:3000 ${{ secrets.DOCKERHUB_USERNAME }}/fellowship-backend2:$TAG_SUFFIX

            echo "Deployment complete."
          EOF

