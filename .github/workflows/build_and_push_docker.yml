name: Docker CI
permissions:
  contents: write
  issues: write
  pages: write
  id-token: write

on:
  push:
    branches:
      - dev
    tags:
      - 'v*.*.*'
  workflow_run:
    workflows: ['Release']
    types: [completed]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/dev' && 'development' || 'production' }}
    strategy:
      matrix:
        service: [frontend, backend1, backend2]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Image Tag
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            VERSION_TAG="${GITHUB_REF#refs/tags/}"
            echo "TAG_SUFFIX=$VERSION_TAG" >> $GITHUB_ENV
          elif [[ "${{ github.event_name }}" == "workflow_run" ]]; then
            git fetch --tags
            LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
            echo "TAG_SUFFIX=$LATEST_TAG" >> $GITHUB_ENV
          else
            SHORT_SHA=$(git rev-parse --short HEAD)
            echo "TAG_SUFFIX=dev-${SHORT_SHA}" >> $GITHUB_ENV
          fi

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fellowship-${{ matrix.service }}:${{ env.TAG_SUFFIX }}

      - name: Save and Upload Docker Image
        run: |
          rm -f ${{ matrix.service }}.tar.gz || true
          docker save ${{ secrets.DOCKERHUB_USERNAME }}/fellowship-${{ matrix.service }}:${{ env.TAG_SUFFIX }} | gzip > ${{ matrix.service }}.tar.gz
        continue-on-error: true

      - name: Upload Image Artifact
        uses: actions/upload-artifact@v4
        if: success() && hashFiles('${{ matrix.service }}.tar.gz') != ''
        with:
          name: ${{ matrix.service }}-image-${{ github.run_id }}-${{ github.run_attempt }}
          path: ${{ matrix.service }}.tar.gz
          retention-days: 7

      - name: Set up Trivy
        if: >
          github.ref == 'refs/heads/main' ||
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'
        uses: aquasecurity/setup-trivy@v0.2.0
        with:
          version: v0.64.1

      - name: Download Trivy HTML template
        if: >
          github.ref == 'refs/heads/main' ||
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'
        run: curl -o html.tpl https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl

      - name: Run Trivy Scan
        if: >
          github.ref == 'refs/heads/main' ||
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'
        run: |
          trivy image --format template --template @html.tpl \
            -o ${{ matrix.service }}-trivy.html \
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/fellowship-${{ matrix.service }}:${{ env.TAG_SUFFIX }}

      - name: Upload Trivy Report
        if: >
          success() && (github.ref == 'refs/heads/main' || (github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main'))
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.service }}-trivy-report
          path: ${{ matrix.service }}-trivy.html

  upload-static-site:
    if: matrix.service == 'frontend'
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install frontend dependencies
        working-directory: frontend
        run: yarn install --frozen-lockfile

      - name: Build static site
        working-directory: frontend
        run: yarn build

      - name: Upload frontend static files
        uses: actions/upload-artifact@v4
        with:
          name: frontend-static-dist
          path: frontend/dist
